name: Build and Test Zig and Bun

on:
  push:
    branches:
      - main
      - te/consume_bun-ffi-z_windows
  pull_request:
    branches:
      - main

jobs:
  zig-build-upload:
    strategy:
      matrix:
        settings:
          - os: windows-latest
            target: x86_64-windows-msvc

    runs-on: ${{ matrix.settings.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive # Ensures submodules are cloned
          fetch-depth: 0        # Fetches the entire history for all branches
      - name: Install Zig
        uses: mlugg/setup-zig@v1
        with:
          version: "0.14.0" # Set the required Zig version
      - name: Build and Test
        run: |
          zig build test
      - name: Build binary
        run: zig build -Dtarget=${{ matrix.settings.target }} -Doptimize=ReleaseSafe
      - name: List Zig output files on Windows
        run: dir zig-out/lib
        shell: cmd
      - name: Upload Zig Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ matrix.settings.target }}
          path: 'zig-out/lib/*state-transition-utils.*'
          if-no-files-found: error

  bun-macos:
    name: Test bindings on macos and windows
    needs: zig-build-upload
    strategy:
      matrix:
        settings:
          - os: windows-latest
            target: x86_64-windows-msvc
    runs-on: ${{ matrix.settings.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4 # no need zig installation, download artifacts from previous job instead
        with:
          name: bindings-${{ matrix.settings.target }}
          path: zig-out/lib # download to the same folder of "zig build -Doptimize=ReleaseSafe"
      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          version: 1.2.13
      - name: Bun - Install Dependencies
        run: bun install
        working-directory: ./bun
      - name: Bun - Unit Tests
        run: bun test:unit
        working-directory: ./bun