// TODO: For each test type, add header and test case code
const std = @import("std");

pub const OPERATIONS_HEADER =
    \\// This file is generated by write_static_tests.zig.
    \\// Do not commit changes by hand.
    \\
    \\const std = @import("std");
    \\const types = @import("consensus_types");
    \\const ForkSeq = @import("config").ForkSeq;
    \\const OperationsTestHandler = @import("../test_type/handler.zig").OperationsTestHandler;
    \\const test_case = @import("./operations.zig");
    \\var TL = @import("../utils/test_logger.zig").TestLogger{};
    \\
    \\
    \\const allocator = std.heap.page_allocator;
    \\
    \\
;

pub const OPERATIONS_TEST_TEMPLATE =
    \\test "Static - {s} {s} {s} {s}" {{
    \\    try TL.run(
    \\        "Static - {s} {s} {s} {s}",
    \\        struct {{
    \\            fn body() !void {{
    \\                const test_dir_name = "{s}";
    \\                var test_dir = std.fs.cwd().openDir(test_dir_name, .{{}}) catch return error.SkipZigTest;
    \\                defer test_dir.close();
    \\                try test_case.runTestCase(ForkSeq.{s}, OperationsTestHandler.{s}, allocator, test_dir);
    \\            }}
    \\        }}.body,
    \\    );
    \\}}
    \\
    \\
;

pub const OPERATIONS_FOOTER =
    \\test "__summary__(Operations Tests)" { 
    \\    TL.summary("Operations Tests");
    \\}
;
